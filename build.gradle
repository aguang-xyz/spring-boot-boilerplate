buildscript {
  ext {
    springBootVersion = '2.1.6.RELEASE'
    spotBugsVersion = '2.0.0'
  }

  repositories {
    mavenCentral()

    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }

  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    classpath("gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:${spotBugsVersion}")
  }
}

plugins {
  id 'com.github.sherter.google-java-format' version '0.8'
  id 'com.palantir.git-version' version '0.12.0-rc2'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.github.spotbugs"

group = 'xyz.aguang'
version = '1.0.0.SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
  mavenCentral()
}

dependencies {
  implementation('org.springframework.boot:spring-boot-starter-web')
  testImplementation('org.springframework.boot:spring-boot-starter-test')
}

javadoc.dependsOn check

bootJar.dependsOn check
bootRun.dependsOn check

task dockerBuild {
  dependsOn bootJar

  doLast {
    def dockerfile = file('./build/tmp/Dockerfile')

    dockerfile.text  = 'FROM openjdk:11-slim\n'
    dockerfile.text += 'WORKDIR /workspace\n'
    dockerfile.text += "COPY build/libs/${rootProject.name}-${version}.jar ./\n"
    dockerfile.text += "CMD [\"java\", \"-jar\", \"${rootProject.name}-${version}.jar\"]"

    exec {
      commandLine 'docker', 'build', '.', '-f', 'build/tmp/Dockerfile', '-t', "${rootProject.name}:${version}"
    }
  }
}

task dockerRun {
  dependsOn dockerBuild

  doLast {
    exec {
      commandLine 'docker', 'run', "${rootProject.name}:${version}"
    }
  }
}
